{"ast":null,"code":"import \"core-js/modules/esnext.typed-array.to-reversed.js\";\nimport \"core-js/modules/esnext.typed-array.to-sorted.js\";\nimport \"core-js/modules/esnext.typed-array.with.js\";\nimport * as THREE from 'three';\nimport vertex from '@/shader/flyLine/vertexShader.glsl';\nimport fragment from '@/shader/flyLine/fragmentShader.glsl';\nexport default class FlyLineShader {\n  constructor() {\n    // 根据点生成曲线\n    let linePoints = [new THREE.Vector3(0.2, 1, 0), new THREE.Vector3(5, 4, 0), new THREE.Vector3(10, 0, 0)];\n    // 创建三维平滑曲线\n    this.lineCurve = new THREE.CatmullRomCurve3(linePoints);\n    // 获取点\n    const points = this.lineCurve.getPoints(1000);\n    // 根据点创建几何\n    this.geometry = new THREE.BufferGeometry().setFromPoints(points);\n\n    // 给每个顶点设置属性\n    const aSizeArray = new Float32Array(points.length);\n    for (let i = 0; i < aSizeArray.length; i++) {\n      aSizeArray[i] = i;\n    }\n    // 设置几何体顶点属性\n    this.geometry.setAttribute('aSize', new THREE.BufferAttribute(aSizeArray, 1));\n\n    // 设置着色器材质\n    this.shaderMaterial = new THREE.ShaderMaterial({\n      vertexShader: vertex,\n      fragmentShader: fragment,\n      transparent: true,\n      depthWrite: false,\n      blending: THREE.AdditiveBlending\n    });\n    this.mesh = new THREE.Points(this.geometry, this.shaderMaterial);\n  }\n}","map":{"version":3,"names":["THREE","vertex","fragment","FlyLineShader","constructor","linePoints","Vector3","lineCurve","CatmullRomCurve3","points","getPoints","geometry","BufferGeometry","setFromPoints","aSizeArray","Float32Array","length","i","setAttribute","BufferAttribute","shaderMaterial","ShaderMaterial","vertexShader","fragmentShader","transparent","depthWrite","blending","AdditiveBlending","mesh","Points"],"sources":["D:/vscodeDemo/threeDemo/threejs_smartcity/src/threeModal/mesh/flyLineShader.js"],"sourcesContent":["import * as THREE from 'three'\r\nimport vertex from '@/shader/flyLine/vertexShader.glsl'\r\nimport fragment from '@/shader/flyLine/fragmentShader.glsl'\r\nexport default class FlyLineShader {\r\n  constructor() {\r\n    // 根据点生成曲线\r\n    let linePoints = [\r\n      new THREE.Vector3(0.2, 1, 0),\r\n      new THREE.Vector3(5, 4, 0),\r\n      new THREE.Vector3(10, 0, 0)\r\n    ]\r\n    // 创建三维平滑曲线\r\n    this.lineCurve = new THREE.CatmullRomCurve3(linePoints)\r\n    // 获取点\r\n    const points = this.lineCurve.getPoints(1000)\r\n    // 根据点创建几何\r\n    this.geometry = new THREE.BufferGeometry().setFromPoints(points)\r\n\r\n\r\n    // 给每个顶点设置属性\r\n    const aSizeArray = new Float32Array(points.length)\r\n    for (let i = 0; i < aSizeArray.length; i++) {\r\n      aSizeArray[i] = i\r\n    }\r\n    // 设置几何体顶点属性\r\n    this.geometry.setAttribute('aSize', new THREE.BufferAttribute(aSizeArray, 1))\r\n\r\n    // 设置着色器材质\r\n    this.shaderMaterial = new THREE.ShaderMaterial({\r\n      vertexShader: vertex,\r\n      fragmentShader: fragment,\r\n      transparent: true,\r\n      depthWrite: false,\r\n      blending: THREE.AdditiveBlending\r\n    })\r\n\r\n    this.mesh = new THREE.Points(this.geometry, this.shaderMaterial)\r\n  }\r\n}"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,oCAAoC;AACvD,OAAOC,QAAQ,MAAM,sCAAsC;AAC3D,eAAe,MAAMC,aAAa,CAAC;EACjCC,WAAW,GAAG;IACZ;IACA,IAAIC,UAAU,GAAG,CACf,IAAIL,KAAK,CAACM,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5B,IAAIN,KAAK,CAACM,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC1B,IAAIN,KAAK,CAACM,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;IACD;IACA,IAAI,CAACC,SAAS,GAAG,IAAIP,KAAK,CAACQ,gBAAgB,CAACH,UAAU,CAAC;IACvD;IACA,MAAMI,MAAM,GAAG,IAAI,CAACF,SAAS,CAACG,SAAS,CAAC,IAAI,CAAC;IAC7C;IACA,IAAI,CAACC,QAAQ,GAAG,IAAIX,KAAK,CAACY,cAAc,EAAE,CAACC,aAAa,CAACJ,MAAM,CAAC;;IAGhE;IACA,MAAMK,UAAU,GAAG,IAAIC,YAAY,CAACN,MAAM,CAACO,MAAM,CAAC;IAClD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,UAAU,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;MAC1CH,UAAU,CAACG,CAAC,CAAC,GAAGA,CAAC;IACnB;IACA;IACA,IAAI,CAACN,QAAQ,CAACO,YAAY,CAAC,OAAO,EAAE,IAAIlB,KAAK,CAACmB,eAAe,CAACL,UAAU,EAAE,CAAC,CAAC,CAAC;;IAE7E;IACA,IAAI,CAACM,cAAc,GAAG,IAAIpB,KAAK,CAACqB,cAAc,CAAC;MAC7CC,YAAY,EAAErB,MAAM;MACpBsB,cAAc,EAAErB,QAAQ;MACxBsB,WAAW,EAAE,IAAI;MACjBC,UAAU,EAAE,KAAK;MACjBC,QAAQ,EAAE1B,KAAK,CAAC2B;IAClB,CAAC,CAAC;IAEF,IAAI,CAACC,IAAI,GAAG,IAAI5B,KAAK,CAAC6B,MAAM,CAAC,IAAI,CAAClB,QAAQ,EAAE,IAAI,CAACS,cAAc,CAAC;EAClE;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}