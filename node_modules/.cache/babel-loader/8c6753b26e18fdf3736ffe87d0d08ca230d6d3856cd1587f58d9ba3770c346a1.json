{"ast":null,"code":"import * as THREE from 'three';\nimport vertex from '@/shader/lineWall/vertexShader.glsl';\nimport fragment from '@/shader/lineWall/fragmentShader.glsl';\nimport gsap from 'gsap';\nexport default class LineWall {\n  constructor(position = {\n    x,\n    z\n  }) {\n    // 创建圆柱几何体\n    this.geometry = new THREE.CylinderGeometry(1.5, 1.5, 1, 32, 1, true);\n    this.material = new THREE.ShaderMaterial({\n      vertexShader: vertex,\n      fragmentShader: fragment,\n      transparent: true,\n      side: THREE.DoubleSide\n    });\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    this.mesh.position.set(0, 0.5, 0);\n    // 计算模型的边距\n    this.mesh.geometry.computeBoundingBox();\n    let {\n      max,\n      min\n    } = this.mesh.geometry.boundingBox;\n    const uHeight = max.y - min.y;\n    this.material.uniforms.uHeight = {\n      value: uHeight\n    };\n    gsap.to(this.mesh.scale, {\n      x: 2.5,\n      z: 2.5,\n      duration: 2,\n      ease: 'none',\n      repeat: -1,\n      yoyo: true\n    });\n  }\n}","map":{"version":3,"names":["THREE","vertex","fragment","gsap","LineWall","constructor","position","x","z","geometry","CylinderGeometry","material","ShaderMaterial","vertexShader","fragmentShader","transparent","side","DoubleSide","mesh","Mesh","set","computeBoundingBox","max","min","boundingBox","uHeight","y","uniforms","value","to","scale","duration","ease","repeat","yoyo"],"sources":["D:/vscodeDemo/threeDemo/threejs_smartcity/src/threeModal/mesh/lineWall.js"],"sourcesContent":["import * as THREE from 'three'\r\nimport vertex from '@/shader/lineWall/vertexShader.glsl'\r\nimport fragment from '@/shader/lineWall/fragmentShader.glsl'\r\nimport gsap from 'gsap'\r\nexport default class LineWall{\r\n  constructor(position = {x, z}) {\r\n    // 创建圆柱几何体\r\n    this.geometry = new THREE.CylinderGeometry(1.5, 1.5, 1, 32, 1, true)\r\n    this.material = new THREE.ShaderMaterial({\r\n      vertexShader: vertex,\r\n      fragmentShader: fragment,\r\n      transparent: true,\r\n      side: THREE.DoubleSide\r\n    })\r\n\r\n    this.mesh = new THREE.Mesh(this.geometry, this.material)\r\n    this.mesh.position.set(0, 0.5, 0)\r\n    // 计算模型的边距\r\n    this.mesh.geometry.computeBoundingBox()\r\n    let {max, min} = this.mesh.geometry.boundingBox\r\n    const uHeight = max.y - min.y\r\n    this.material.uniforms.uHeight = {\r\n      value: uHeight\r\n    }\r\n    gsap.to(this.mesh.scale, {\r\n      x: 2.5,\r\n      z: 2.5,\r\n      duration: 2,\r\n      ease: 'none',\r\n      repeat: -1,\r\n      yoyo: true\r\n    })\r\n  }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,qCAAqC;AACxD,OAAOC,QAAQ,MAAM,uCAAuC;AAC5D,OAAOC,IAAI,MAAM,MAAM;AACvB,eAAe,MAAMC,QAAQ;EAC3BC,WAAW,CAACC,QAAQ,GAAG;IAACC,CAAC;IAAEC;EAAC,CAAC,EAAE;IAC7B;IACA,IAAI,CAACC,QAAQ,GAAG,IAAIT,KAAK,CAACU,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC;IACpE,IAAI,CAACC,QAAQ,GAAG,IAAIX,KAAK,CAACY,cAAc,CAAC;MACvCC,YAAY,EAAEZ,MAAM;MACpBa,cAAc,EAAEZ,QAAQ;MACxBa,WAAW,EAAE,IAAI;MACjBC,IAAI,EAAEhB,KAAK,CAACiB;IACd,CAAC,CAAC;IAEF,IAAI,CAACC,IAAI,GAAG,IAAIlB,KAAK,CAACmB,IAAI,CAAC,IAAI,CAACV,QAAQ,EAAE,IAAI,CAACE,QAAQ,CAAC;IACxD,IAAI,CAACO,IAAI,CAACZ,QAAQ,CAACc,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IACjC;IACA,IAAI,CAACF,IAAI,CAACT,QAAQ,CAACY,kBAAkB,EAAE;IACvC,IAAI;MAACC,GAAG;MAAEC;IAAG,CAAC,GAAG,IAAI,CAACL,IAAI,CAACT,QAAQ,CAACe,WAAW;IAC/C,MAAMC,OAAO,GAAGH,GAAG,CAACI,CAAC,GAAGH,GAAG,CAACG,CAAC;IAC7B,IAAI,CAACf,QAAQ,CAACgB,QAAQ,CAACF,OAAO,GAAG;MAC/BG,KAAK,EAAEH;IACT,CAAC;IACDtB,IAAI,CAAC0B,EAAE,CAAC,IAAI,CAACX,IAAI,CAACY,KAAK,EAAE;MACvBvB,CAAC,EAAE,GAAG;MACNC,CAAC,EAAE,GAAG;MACNuB,QAAQ,EAAE,CAAC;MACXC,IAAI,EAAE,MAAM;MACZC,MAAM,EAAE,CAAC,CAAC;MACVC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}