{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n// import * as THREE from 'three'\nimport scene from '@/threeModal/scene';\nimport eventBus from '@/utils/eventBus';\nimport gsap from 'gsap';\n// import CameraModule from '@/threeModal/camera'\n// import modityCityMaterial from '../modity/modityCityMaterial'\n// import FlyLine from './flyLine'\n// import FlyLineShader from './flyLineShader'\n// import CreateMeshLine from './createMeshLine'\n// import LineWall from './lineWall'\n// import LineRader from './lineRader'\n// import Alarm from './alarm'\nexport default class CreateCity {\n  constructor() {\n    let daoLoader = new DRACOLoader();\n    let loader = new GLTFLoader();\n    daoLoader.setDecoderPath('/glb/');\n    daoLoader.setDecoderConfig({\n      type: 'js'\n    });\n    daoLoader.preload();\n    loader.setDRACOLoader(daoLoader);\n    // 储存模型\n    this.modelArray = [];\n    loader.load('/glb/工厂一楼.glb', gltf => {\n      gltf.scene.traverse(mesh => {\n        if (mesh.isMesh) {\n          mesh.material.emissiveIntensity = 15;\n        }\n      });\n      gltf.scene.visible = false;\n      this.modelArray.push({\n        name: 'firstFloor',\n        mesh: gltf.scene\n      });\n      scene.add(gltf.scene);\n    });\n    loader.load('/glb/工厂二楼.glb', gltf => {\n      gltf.scene.traverse(mesh => {\n        if (mesh.isMesh) {\n          mesh.material.emissiveIntensity = 15;\n        }\n      });\n      gltf.scene.visible = false;\n      this.modelArray.push({\n        name: 'secondFloor',\n        mesh: gltf.scene\n      });\n      scene.add(gltf.scene);\n    });\n    // 加载大楼模型\n    loader.load('/glb/工厂大楼.glb', gltf => {\n      // gltf.scene.traverse(mesh => {\n\n      // })\n      gltf.scene.visible = true;\n      this.modelArray.push({\n        name: 'default',\n        mesh: gltf.scene\n      });\n      scene.add(gltf.scene);\n    });\n    this.toggleModel();\n  }\n  toggleModel() {\n    eventBus.on('toggleModel', name => {\n      console.log(this.modelArray);\n      if (name !== 'hierarchy') {\n        this.modelArray.forEach(data => {\n          data.mesh.position.setY(0);\n          data.mesh.visible = false;\n        });\n        this.modelArray.forEach(data => {\n          if (data.name === name) {\n            data.mesh.visible = true;\n          }\n        });\n      } else {\n        this.modelArray.forEach(data => {\n          if (data.name === 'firstFloor') {\n            data.mesh = true;\n            gsap.to(data.mesh.position, {\n              y: 0,\n              duration: 2,\n              onComplete: () => {}\n            });\n          }\n          if (data.name === 'secondFloor') {\n            gsap.to(data.mesh.position, {\n              y: 100,\n              duration: 2\n            });\n          }\n          if (data.name === 'default') {\n            gsap.to(data.mesh.position, {\n              y: 200,\n              duration: 2\n            });\n          }\n        });\n      }\n    });\n  }\n}","map":{"version":3,"names":["DRACOLoader","GLTFLoader","scene","eventBus","gsap","CreateCity","constructor","daoLoader","loader","setDecoderPath","setDecoderConfig","type","preload","setDRACOLoader","modelArray","load","gltf","traverse","mesh","isMesh","material","emissiveIntensity","visible","push","name","add","toggleModel","on","console","log","forEach","data","position","setY","to","y","duration","onComplete"],"sources":["D:/vscodeDemo/threeDemo/threejs_factory/src/threeModal/mesh/createCity.js"],"sourcesContent":["import { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\n// import * as THREE from 'three'\r\nimport scene from '@/threeModal/scene'\r\nimport eventBus from '@/utils/eventBus'\r\nimport gsap from 'gsap'\r\n// import CameraModule from '@/threeModal/camera'\r\n// import modityCityMaterial from '../modity/modityCityMaterial'\r\n// import FlyLine from './flyLine'\r\n// import FlyLineShader from './flyLineShader'\r\n// import CreateMeshLine from './createMeshLine'\r\n// import LineWall from './lineWall'\r\n// import LineRader from './lineRader'\r\n// import Alarm from './alarm'\r\nexport default class CreateCity {\r\n  constructor () {\r\n    let daoLoader = new DRACOLoader()\r\n    let loader = new GLTFLoader()\r\n    daoLoader.setDecoderPath('/glb/')\r\n    daoLoader.setDecoderConfig({ type: 'js' })\r\n    daoLoader.preload()\r\n    loader.setDRACOLoader(daoLoader)\r\n    // 储存模型\r\n    this.modelArray = []\r\n\r\n    loader.load('/glb/工厂一楼.glb', gltf => {\r\n      gltf.scene.traverse(mesh => {\r\n        if (mesh.isMesh) {\r\n          mesh.material.emissiveIntensity = 15\r\n        }\r\n      })\r\n      gltf.scene.visible = false\r\n      this.modelArray.push({ name: 'firstFloor', mesh: gltf.scene })\r\n      scene.add(gltf.scene)\r\n    })\r\n    loader.load('/glb/工厂二楼.glb', gltf => {\r\n      gltf.scene.traverse(mesh => {\r\n        if (mesh.isMesh) {\r\n          mesh.material.emissiveIntensity = 15\r\n        }\r\n      })\r\n      gltf.scene.visible = false\r\n      this.modelArray.push({ name: 'secondFloor', mesh: gltf.scene })\r\n      scene.add(gltf.scene)\r\n    })\r\n    // 加载大楼模型\r\n    loader.load('/glb/工厂大楼.glb', gltf => {\r\n      // gltf.scene.traverse(mesh => {\r\n\r\n      // })\r\n      gltf.scene.visible = true\r\n      this.modelArray.push({ name: 'default', mesh: gltf.scene })\r\n      scene.add(gltf.scene)\r\n    })\r\n    this.toggleModel()\r\n  }\r\n  toggleModel() {\r\n    eventBus.on('toggleModel', name => {\r\n      console.log(this.modelArray)\r\n      if (name !== 'hierarchy') {\r\n        this.modelArray.forEach(data => {\r\n          data.mesh.position.setY(0)\r\n          data.mesh.visible = false\r\n        })\r\n        this.modelArray.forEach(data => {\r\n          if (data.name === name) {\r\n            data.mesh.visible = true\r\n          }\r\n        })\r\n      } else {\r\n        this.modelArray.forEach((data) => {\r\n\r\n          if(data.name === 'firstFloor') {\r\n            data.mesh = true\r\n            gsap.to(data.mesh.position, {\r\n              y: 0,\r\n              duration: 2,\r\n              onComplete: () => {}\r\n            })\r\n\r\n          }\r\n          if(data.name === 'secondFloor') {\r\n            gsap.to(data.mesh.position, {\r\n              y: 100,\r\n              duration: 2,\r\n            })\r\n          }\r\n          if(data.name === 'default') {\r\n              gsap.to(data.mesh.position, {\r\n              y: 200,\r\n              duration: 2,\r\n            })\r\n          }\r\n          \r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}