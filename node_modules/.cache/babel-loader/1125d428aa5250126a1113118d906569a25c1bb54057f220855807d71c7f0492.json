{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n// import * as THREE from 'three'\nimport scene from '@/threeModal/scene';\n// import gsap from 'gsap'\n// import CameraModule from '@/threeModal/camera'\n// import modityCityMaterial from '../modity/modityCityMaterial'\n// import FlyLine from './flyLine'\n// import FlyLineShader from './flyLineShader'\n// import CreateMeshLine from './createMeshLine'\n// import LineWall from './lineWall'\n// import LineRader from './lineRader'\n// import Alarm from './alarm'\nexport default class CreateCity {\n  constructor() {\n    let daoLoader = new DRACOLoader();\n    let loader = new GLTFLoader();\n    daoLoader.setDecoderPath('/glb/');\n    daoLoader.setDecoderConfig({\n      type: 'js'\n    });\n    daoLoader.preload();\n    loader.setDRACOLoader(daoLoader);\n    // 储存城市模型\n    const modelArray = [];\n    // 加载城市模型\n    loader.load('/glb/工厂二楼.glb', gltf => {\n      console.log(gltf);\n      gltf.scene.traverse(mesh => {\n        if (mesh.isMesh) {\n          mesh.material.emissiveIntensity = 15;\n        }\n      });\n      modelArray.push(gltf.scene);\n      scene.add(gltf.scene);\n    });\n    eventBus.on('toggleModel', model => {});\n  }\n}","map":{"version":3,"names":["DRACOLoader","GLTFLoader","scene","CreateCity","constructor","daoLoader","loader","setDecoderPath","setDecoderConfig","type","preload","setDRACOLoader","modelArray","load","gltf","console","log","traverse","mesh","isMesh","material","emissiveIntensity","push","add","eventBus","on","model"],"sources":["D:/vscodeDemo/threeDemo/threejs_factory/src/threeModal/mesh/createCity.js"],"sourcesContent":["import { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\n// import * as THREE from 'three'\r\nimport scene from '@/threeModal/scene'\r\n// import gsap from 'gsap'\r\n// import CameraModule from '@/threeModal/camera'\r\n// import modityCityMaterial from '../modity/modityCityMaterial'\r\n// import FlyLine from './flyLine'\r\n// import FlyLineShader from './flyLineShader'\r\n// import CreateMeshLine from './createMeshLine'\r\n// import LineWall from './lineWall'\r\n// import LineRader from './lineRader'\r\n// import Alarm from './alarm'\r\nexport default class CreateCity {\r\n  constructor () {\r\n    let daoLoader = new DRACOLoader()\r\n    let loader = new GLTFLoader()\r\n    daoLoader.setDecoderPath('/glb/')\r\n    daoLoader.setDecoderConfig({ type: 'js' })\r\n    daoLoader.preload()\r\n    loader.setDRACOLoader(daoLoader)\r\n    // 储存城市模型\r\n    const modelArray = []\r\n    // 加载城市模型\r\n    loader.load('/glb/工厂二楼.glb', gltf => {\r\n      console.log(gltf)\r\n      gltf.scene.traverse(mesh => {\r\n        if(mesh.isMesh) {\r\n          mesh.material.emissiveIntensity = 15;\r\n        }\r\n      })\r\n      modelArray.push(gltf.scene)\r\n      scene.add(gltf.scene)\r\n    })\r\n\r\n    eventBus.on('toggleModel', model => {\r\n\r\n    })\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,wCAAwC;AACpE,SAASC,UAAU,QAAQ,uCAAuC;AAClE;AACA,OAAOC,KAAK,MAAM,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,UAAU,CAAC;EAC9BC,WAAW,GAAI;IACb,IAAIC,SAAS,GAAG,IAAIL,WAAW,EAAE;IACjC,IAAIM,MAAM,GAAG,IAAIL,UAAU,EAAE;IAC7BI,SAAS,CAACE,cAAc,CAAC,OAAO,CAAC;IACjCF,SAAS,CAACG,gBAAgB,CAAC;MAAEC,IAAI,EAAE;IAAK,CAAC,CAAC;IAC1CJ,SAAS,CAACK,OAAO,EAAE;IACnBJ,MAAM,CAACK,cAAc,CAACN,SAAS,CAAC;IAChC;IACA,MAAMO,UAAU,GAAG,EAAE;IACrB;IACAN,MAAM,CAACO,IAAI,CAAC,eAAe,EAAEC,IAAI,IAAI;MACnCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBA,IAAI,CAACZ,KAAK,CAACe,QAAQ,CAACC,IAAI,IAAI;QAC1B,IAAGA,IAAI,CAACC,MAAM,EAAE;UACdD,IAAI,CAACE,QAAQ,CAACC,iBAAiB,GAAG,EAAE;QACtC;MACF,CAAC,CAAC;MACFT,UAAU,CAACU,IAAI,CAACR,IAAI,CAACZ,KAAK,CAAC;MAC3BA,KAAK,CAACqB,GAAG,CAACT,IAAI,CAACZ,KAAK,CAAC;IACvB,CAAC,CAAC;IAEFsB,QAAQ,CAACC,EAAE,CAAC,aAAa,EAAEC,KAAK,IAAI,CAEpC,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}