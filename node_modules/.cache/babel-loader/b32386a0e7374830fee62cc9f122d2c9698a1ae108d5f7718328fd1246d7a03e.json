{"ast":null,"code":"import { onMounted, reactive } from 'vue';\nimport SceneCanvas from '@/components/SceneCanvas.vue';\nimport BigScreen from '@/components/bigScreen.vue';\nimport { getCityInformation } from '@/api/cityAPI';\nexport default {\n  __name: 'HomeView',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const resInformation = reactive({});\n    onMounted(async () => {\n      const res = await getCityInformation();\n      const data = res.data.data;\n      for (const key in data) {\n        resInformation[key] = data[key];\n      }\n      console.log(resInformation);\n    });\n    const __returned__ = {\n      resInformation,\n      onMounted,\n      reactive,\n      SceneCanvas,\n      BigScreen,\n      get getCityInformation() {\n        return getCityInformation;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAOA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,KAAK;AACzC,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,SAASC,kBAAkB,QAAQ,eAAe;;;;;;;IAClD,MAAMC,cAAc,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnCD,SAAS,CAAC,YAAY;MACpB,MAAMM,GAAG,GAAG,MAAMF,kBAAkB,EAAE;MACtC,MAAMG,IAAI,GAAGD,GAAG,CAACC,IAAI,CAACA,IAAI;MAC1B,KAAK,MAAMC,GAAG,IAAID,IAAI,EAAE;QACtBF,cAAc,CAACG,GAAG,CAAC,GAAGD,IAAI,CAACC,GAAG,CAAC;MACjC;MACAC,OAAO,CAACC,GAAG,CAACL,cAAc,CAAC;IAC7B,CAAC,CAAC","names":["onMounted","reactive","SceneCanvas","BigScreen","getCityInformation","resInformation","res","data","key","console","log"],"sources":["D:/vscodeDemo/threeDemo/threejs_smartcity/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <SceneCanvas></SceneCanvas>\n    <BigScreen :resInformation=\"resInformation\"></BigScreen>\n  </div>\n</template>\n<script setup>\nimport { onMounted, reactive } from 'vue'\nimport SceneCanvas from '@/components/SceneCanvas.vue'\nimport BigScreen from '@/components/bigScreen.vue'\nimport { getCityInformation } from '@/api/cityAPI'\nconst resInformation = reactive({})\nonMounted(async () => {\n  const res = await getCityInformation()\n  const data = res.data.data\n  for (const key in data) {\n    resInformation[key] = data[key]\n  }\n  console.log(resInformation);\n})\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}