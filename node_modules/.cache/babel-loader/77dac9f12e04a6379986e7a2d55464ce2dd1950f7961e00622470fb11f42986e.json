{"ast":null,"code":"import * as THREE from 'three';\nimport gsap from 'gsap';\n// 飞线就是曲线\nexport default class FlyLine {\n  constructor() {\n    let linePoints = [new THREE.Vector3(0, 3, 0), new THREE.Vector3(-1, 3, 0), new THREE.Vector3(-4, 0, 0)];\n    // 创建平滑的三维曲线\n    this.lineCurve = new THREE.CatmullRomCurve3(linePoints);\n    // 根据曲线生成管道几何\n    this.geomentry = new THREE.TubeGeometry(this.lineCurve, 30, 0.2, 2, false);\n    // 创建飞线材质\n    const lineLoad = new THREE.TextureLoader();\n    this.lineTexture = lineLoad.load('./texture/z1.png');\n    this.lineTexture.repeat.set(1, 2);\n    // 重复\n    // x轴重复\n    this.lineTexture.wrapS = THREE.RepeatWrapping;\n    // 镜像重复\n    this.lineTexture.wrapT = THREE.MirroredRepeatWrapping;\n    this.material = new THREE.MeshBasicMaterial({\n      map: this.lineTexture,\n      transparent: true\n    });\n\n    // 创建飞线物体\n    this.mesh = new THREE.Mesh(this.geomentry, this.material);\n    gsap.to(this.lineTexture.offset, {\n      x: -1,\n      repeat: -1,\n      duration: 2,\n      ease: 'none'\n    });\n  }\n}","map":{"version":3,"names":["THREE","gsap","FlyLine","constructor","linePoints","Vector3","lineCurve","CatmullRomCurve3","geomentry","TubeGeometry","lineLoad","TextureLoader","lineTexture","load","repeat","set","wrapS","RepeatWrapping","wrapT","MirroredRepeatWrapping","material","MeshBasicMaterial","map","transparent","mesh","Mesh","to","offset","x","duration","ease"],"sources":["D:/vscodeDemo/threeDemo/threejs_smartcity/src/threeModal/mesh/flyLine.js"],"sourcesContent":["import * as THREE from 'three'\r\nimport gsap from 'gsap'\r\n// 飞线就是曲线\r\nexport default class FlyLine {\r\n  constructor() {\r\n    let linePoints = [\r\n      new THREE.Vector3(0, 3, 0),\r\n      new THREE.Vector3(-1, 3, 0),\r\n      new THREE.Vector3(-4, 0, 0),\r\n    ]\r\n    // 创建平滑的三维曲线\r\n    this.lineCurve = new THREE.CatmullRomCurve3(linePoints)\r\n    // 根据曲线生成管道几何\r\n    this.geomentry = new THREE.TubeGeometry(this.lineCurve, 30, 0.2, 2, false)\r\n    // 创建飞线材质\r\n    const lineLoad = new THREE.TextureLoader()\r\n    this.lineTexture = lineLoad.load('./texture/z1.png')\r\n    this.lineTexture.repeat.set(1, 2)\r\n    // 重复\r\n    // x轴重复\r\n    this.lineTexture.wrapS = THREE.RepeatWrapping\r\n    // 镜像重复\r\n    this.lineTexture.wrapT = THREE.MirroredRepeatWrapping\r\n    this.material = new THREE.MeshBasicMaterial(\r\n      {\r\n        map: this.lineTexture,\r\n        transparent: true\r\n      }\r\n      )\r\n\r\n    // 创建飞线物体\r\n    this.mesh = new THREE.Mesh(this.geomentry, this.material)\r\n\r\n    gsap.to(this.lineTexture.offset, {\r\n      x: -1,\r\n      repeat: -1,\r\n      duration: 2,\r\n      ease: 'none'\r\n    })\r\n  }\r\n \r\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,MAAM;AACvB;AACA,eAAe,MAAMC,OAAO,CAAC;EAC3BC,WAAW,GAAG;IACZ,IAAIC,UAAU,GAAG,CACf,IAAIJ,KAAK,CAACK,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC1B,IAAIL,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,IAAIL,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;IACD;IACA,IAAI,CAACC,SAAS,GAAG,IAAIN,KAAK,CAACO,gBAAgB,CAACH,UAAU,CAAC;IACvD;IACA,IAAI,CAACI,SAAS,GAAG,IAAIR,KAAK,CAACS,YAAY,CAAC,IAAI,CAACH,SAAS,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC;IAC1E;IACA,MAAMI,QAAQ,GAAG,IAAIV,KAAK,CAACW,aAAa,EAAE;IAC1C,IAAI,CAACC,WAAW,GAAGF,QAAQ,CAACG,IAAI,CAAC,kBAAkB,CAAC;IACpD,IAAI,CAACD,WAAW,CAACE,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACjC;IACA;IACA,IAAI,CAACH,WAAW,CAACI,KAAK,GAAGhB,KAAK,CAACiB,cAAc;IAC7C;IACA,IAAI,CAACL,WAAW,CAACM,KAAK,GAAGlB,KAAK,CAACmB,sBAAsB;IACrD,IAAI,CAACC,QAAQ,GAAG,IAAIpB,KAAK,CAACqB,iBAAiB,CACzC;MACEC,GAAG,EAAE,IAAI,CAACV,WAAW;MACrBW,WAAW,EAAE;IACf,CAAC,CACA;;IAEH;IACA,IAAI,CAACC,IAAI,GAAG,IAAIxB,KAAK,CAACyB,IAAI,CAAC,IAAI,CAACjB,SAAS,EAAE,IAAI,CAACY,QAAQ,CAAC;IAEzDnB,IAAI,CAACyB,EAAE,CAAC,IAAI,CAACd,WAAW,CAACe,MAAM,EAAE;MAC/BC,CAAC,EAAE,CAAC,CAAC;MACLd,MAAM,EAAE,CAAC,CAAC;MACVe,QAAQ,EAAE,CAAC;MACXC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}