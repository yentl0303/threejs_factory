{"ast":null,"code":"import * as THREE from 'three';\nimport vertex from '@/shader/lineRader/vertexShader.glsl';\nimport fragment from '@/shader/lineRader/fragmentShader.glsl';\nimport gsap from 'gsap';\nexport default class lineRader {\n  constructor() {\n    // 创建圆柱几何体\n    this.geometry = new THREE.CircleGeometry(5, 32);\n    this.material = new THREE.ShaderMaterial({\n      uniforms: {\n        uTime: {\n          value: 0\n        },\n        uColor: {\n          value: new THREE.Color('#7D9EC0')\n        }\n      },\n      vertexShader: vertex,\n      fragmentShader: fragment,\n      transparent: true,\n      side: THREE.DoubleSide\n    });\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    this.mesh.position.set(0, 1, 0);\n    gsap.to(this.material.uniforms.uTime, {\n      value: 30,\n      ease: 'none'\n    });\n  }\n}","map":{"version":3,"names":["THREE","vertex","fragment","gsap","lineRader","constructor","geometry","CircleGeometry","material","ShaderMaterial","uniforms","uTime","value","uColor","Color","vertexShader","fragmentShader","transparent","side","DoubleSide","mesh","Mesh","position","set","to","ease"],"sources":["D:/vscodeDemo/threeDemo/threejs_smartcity/src/threeModal/mesh/lineRader.js"],"sourcesContent":["import * as THREE from 'three'\r\nimport vertex from '@/shader/lineRader/vertexShader.glsl'\r\nimport fragment from '@/shader/lineRader/fragmentShader.glsl'\r\nimport gsap from 'gsap'\r\nexport default class lineRader {\r\n  constructor() {\r\n    // 创建圆柱几何体\r\n    this.geometry = new THREE.CircleGeometry(5, 32)\r\n    this.material = new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        uTime: {\r\n          value: 0\r\n        },\r\n        uColor: {\r\n          value: new THREE.Color('#7D9EC0')\r\n        }\r\n      },\r\n      vertexShader: vertex,\r\n      fragmentShader: fragment,\r\n      transparent: true,\r\n      side: THREE.DoubleSide\r\n    })\r\n\r\n    this.mesh = new THREE.Mesh(this.geometry, this.material)\r\n    this.mesh.position.set(0, 1, 0)\r\n\r\n    gsap.to(this.material.uniforms.uTime, {\r\n      value: 30,\r\n      ease: 'none'\r\n    })\r\n  }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,sCAAsC;AACzD,OAAOC,QAAQ,MAAM,wCAAwC;AAC7D,OAAOC,IAAI,MAAM,MAAM;AACvB,eAAe,MAAMC,SAAS,CAAC;EAC7BC,WAAW,GAAG;IACZ;IACA,IAAI,CAACC,QAAQ,GAAG,IAAIN,KAAK,CAACO,cAAc,CAAC,CAAC,EAAE,EAAE,CAAC;IAC/C,IAAI,CAACC,QAAQ,GAAG,IAAIR,KAAK,CAACS,cAAc,CAAC;MACvCC,QAAQ,EAAE;QACRC,KAAK,EAAE;UACLC,KAAK,EAAE;QACT,CAAC;QACDC,MAAM,EAAE;UACND,KAAK,EAAE,IAAIZ,KAAK,CAACc,KAAK,CAAC,SAAS;QAClC;MACF,CAAC;MACDC,YAAY,EAAEd,MAAM;MACpBe,cAAc,EAAEd,QAAQ;MACxBe,WAAW,EAAE,IAAI;MACjBC,IAAI,EAAElB,KAAK,CAACmB;IACd,CAAC,CAAC;IAEF,IAAI,CAACC,IAAI,GAAG,IAAIpB,KAAK,CAACqB,IAAI,CAAC,IAAI,CAACf,QAAQ,EAAE,IAAI,CAACE,QAAQ,CAAC;IACxD,IAAI,CAACY,IAAI,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAE/BpB,IAAI,CAACqB,EAAE,CAAC,IAAI,CAAChB,QAAQ,CAACE,QAAQ,CAACC,KAAK,EAAE;MACpCC,KAAK,EAAE,EAAE;MACTa,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}