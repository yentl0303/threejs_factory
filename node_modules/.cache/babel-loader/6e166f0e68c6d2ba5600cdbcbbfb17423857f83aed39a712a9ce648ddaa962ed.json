{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three';\nimport scene from '@/threeModal/scene';\nimport gsap from 'gsap';\n// import modityCityMaterial from '../modity/modityCityMaterial'\n// import FlyLine from './flyLine'\n// import FlyLineShader from './flyLineShader'\n// import CreateMeshLine from './createMeshLine'\n// import LineWall from './lineWall'\n// import LineRader from './lineRader'\n// import Alarm from './alarm'\nexport default function createCity() {\n  let daoLoader = new DRACOLoader();\n  let loader = new GLTFLoader();\n  daoLoader.setDecoderPath('/glb/');\n  daoLoader.setDecoderConfig({\n    type: 'js'\n  });\n  daoLoader.preload();\n  loader.setDRACOLoader(daoLoader);\n  // 加载城市模型\n  loader.load('/glb/garden.glb', gltf => {\n    gltf.scene.traverse(item => {\n      // 根据点创建曲线\n      const points = [];\n      if (item.name === 'NURBS_曲线002') {\n        for (let i = 0; i < item.geometry.attributes.position.count - 1; i++) {\n          points.push(new THREE.Vector3(item.geometry.attributes.position.getX(i)), new THREE.Vector3(item.geometry.attributes.position.getY(i)), new THREE.Vector3(item.geometry.attributes.position.getZ(i)));\n        }\n        this.curve = new THREE.CatmullRomCurve3(points);\n        console.log(this.curve);\n        this.curveProgress = 0;\n        gsap.to(this, {\n          curveProgress: 0.999,\n          duration: 10,\n          repeat: -1\n        });\n      }\n    });\n    scene.add(gltf.scene);\n  });\n\n  // 添加飞线\n  // const flyLine = new FlyLine()\n  // scene.add(flyLine.mesh)\n\n  // const flyLineShader = new FlyLineShader()\n  // scene.add(flyLineShader.mesh)\n\n  // // 添加光墙\n  // const lineWall = new LineWall()\n  // scene.add(lineWall.mesh)\n\n  // // 添加雷达\n  // const lineRader = new LineRader()\n  // scene.add(lineRader.mesh)\n\n  // // 添加警告标识\n  // const alarm = new Alarm()\n  // scene.add(alarm.mesh)\n  // alarm.onClick(() => {\n  //   alert('警告')\n  // })\n}","map":{"version":3,"names":["DRACOLoader","GLTFLoader","THREE","scene","gsap","createCity","daoLoader","loader","setDecoderPath","setDecoderConfig","type","preload","setDRACOLoader","load","gltf","traverse","item","points","name","i","geometry","attributes","position","count","push","Vector3","getX","getY","getZ","curve","CatmullRomCurve3","console","log","curveProgress","to","duration","repeat","add"],"sources":["D:/vscodeDemo/threeDemo/threejs_park/src/threeModal/mesh/createCity.js"],"sourcesContent":["import { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport * as THREE from 'three'\r\nimport scene from '@/threeModal/scene'\r\nimport gsap from 'gsap'\r\n// import modityCityMaterial from '../modity/modityCityMaterial'\r\n// import FlyLine from './flyLine'\r\n// import FlyLineShader from './flyLineShader'\r\n// import CreateMeshLine from './createMeshLine'\r\n// import LineWall from './lineWall'\r\n// import LineRader from './lineRader'\r\n// import Alarm from './alarm'\r\nexport default function createCity () {\r\n  let daoLoader = new DRACOLoader()\r\n  let loader = new GLTFLoader()\r\n  daoLoader.setDecoderPath('/glb/')\r\n  daoLoader.setDecoderConfig({type: 'js'})\r\n  daoLoader.preload()\r\n  loader.setDRACOLoader(daoLoader)\r\n  // 加载城市模型\r\n  loader.load('/glb/garden.glb', gltf => {\r\n    gltf.scene.traverse(item => {\r\n      \r\n      // 根据点创建曲线\r\n      const points = []\r\n      if(item.name === 'NURBS_曲线002') {\r\n        for(let i = 0;i < item.geometry.attributes.position.count - 1;i++) {\r\n          points.push(new THREE.Vector3(item.geometry.attributes.position.getX(i)), \r\n          new THREE.Vector3(item.geometry.attributes.position.getY(i)),\r\n          new THREE.Vector3(item.geometry.attributes.position.getZ(i)))\r\n        }\r\n        this.curve = new THREE.CatmullRomCurve3(points)\r\n        console.log(this.curve);\r\n        this.curveProgress = 0\r\n        gsap.to(this, {\r\n          curveProgress: 0.999,\r\n          duration: 10,\r\n          repeat: -1\r\n        })\r\n      }\r\n    })\r\n    scene.add(gltf.scene)\r\n  })\r\n\r\n  // 添加飞线\r\n  // const flyLine = new FlyLine()\r\n  // scene.add(flyLine.mesh)\r\n\r\n  // const flyLineShader = new FlyLineShader()\r\n  // scene.add(flyLineShader.mesh)\r\n\r\n  // // 添加光墙\r\n  // const lineWall = new LineWall()\r\n  // scene.add(lineWall.mesh)\r\n\r\n  // // 添加雷达\r\n  // const lineRader = new LineRader()\r\n  // scene.add(lineRader.mesh)\r\n\r\n  // // 添加警告标识\r\n  // const alarm = new Alarm()\r\n  // scene.add(alarm.mesh)\r\n  // alarm.onClick(() => {\r\n  //   alert('警告')\r\n  // })\r\n}\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,wCAAwC;AACpE,SAASC,UAAU,QAAQ,uCAAuC;AAClE,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,UAAU,GAAI;EACpC,IAAIC,SAAS,GAAG,IAAIN,WAAW,EAAE;EACjC,IAAIO,MAAM,GAAG,IAAIN,UAAU,EAAE;EAC7BK,SAAS,CAACE,cAAc,CAAC,OAAO,CAAC;EACjCF,SAAS,CAACG,gBAAgB,CAAC;IAACC,IAAI,EAAE;EAAI,CAAC,CAAC;EACxCJ,SAAS,CAACK,OAAO,EAAE;EACnBJ,MAAM,CAACK,cAAc,CAACN,SAAS,CAAC;EAChC;EACAC,MAAM,CAACM,IAAI,CAAC,iBAAiB,EAAEC,IAAI,IAAI;IACrCA,IAAI,CAACX,KAAK,CAACY,QAAQ,CAACC,IAAI,IAAI;MAE1B;MACA,MAAMC,MAAM,GAAG,EAAE;MACjB,IAAGD,IAAI,CAACE,IAAI,KAAK,aAAa,EAAE;QAC9B,KAAI,IAAIC,CAAC,GAAG,CAAC,EAACA,CAAC,GAAGH,IAAI,CAACI,QAAQ,CAACC,UAAU,CAACC,QAAQ,CAACC,KAAK,GAAG,CAAC,EAACJ,CAAC,EAAE,EAAE;UACjEF,MAAM,CAACO,IAAI,CAAC,IAAItB,KAAK,CAACuB,OAAO,CAACT,IAAI,CAACI,QAAQ,CAACC,UAAU,CAACC,QAAQ,CAACI,IAAI,CAACP,CAAC,CAAC,CAAC,EACxE,IAAIjB,KAAK,CAACuB,OAAO,CAACT,IAAI,CAACI,QAAQ,CAACC,UAAU,CAACC,QAAQ,CAACK,IAAI,CAACR,CAAC,CAAC,CAAC,EAC5D,IAAIjB,KAAK,CAACuB,OAAO,CAACT,IAAI,CAACI,QAAQ,CAACC,UAAU,CAACC,QAAQ,CAACM,IAAI,CAACT,CAAC,CAAC,CAAC,CAAC;QAC/D;QACA,IAAI,CAACU,KAAK,GAAG,IAAI3B,KAAK,CAAC4B,gBAAgB,CAACb,MAAM,CAAC;QAC/Cc,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,KAAK,CAAC;QACvB,IAAI,CAACI,aAAa,GAAG,CAAC;QACtB7B,IAAI,CAAC8B,EAAE,CAAC,IAAI,EAAE;UACZD,aAAa,EAAE,KAAK;UACpBE,QAAQ,EAAE,EAAE;UACZC,MAAM,EAAE,CAAC;QACX,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IACFjC,KAAK,CAACkC,GAAG,CAACvB,IAAI,CAACX,KAAK,CAAC;EACvB,CAAC,CAAC;;EAEF;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}