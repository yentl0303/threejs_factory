{"ast":null,"code":"import { createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode($setup[\"SceneCanvas\"]), _createVNode($setup[\"BigScreen\"], {\n    resInformation: $setup.resInformation\n  }, null, 8 /* PROPS */, [\"resInformation\"])]);\n}","map":{"version":3,"mappings":";;uBACEA,oBAGM,cAFJC,aAA2BC,wBAC3BD,aAAwDC;IAA5CC,cAAc,EAAED;EAAc","names":["_createElementBlock","_createVNode","$setup","resInformation"],"sourceRoot":"","sources":["D:\\vscodeDemo\\threeDemo\\threejs_smartcity\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <SceneCanvas></SceneCanvas>\n    <BigScreen :resInformation=\"resInformation\"></BigScreen>\n  </div>\n</template>\n<script setup>\nimport { onMounted, reactive } from 'vue'\nimport SceneCanvas from '@/components/SceneCanvas.vue'\nimport BigScreen from '@/components/bigScreen.vue'\nimport { getCityInformation } from '@/api/cityAPI'\nimport gsap from 'gsap'\nconst resInformation = reactive({\n  iot: { number: 0 },\n  event: { number: 0 },\n  power: { number: 0 },\n  test: { number: 0 },\n})\nonMounted(() => {\n  getInformationData()\n  setInterval(() => {\n    getInformationData()\n  }, 5000)\n})\nconst getInformationData = async () => {\n  const res = await getCityInformation()\n  // const data = res.data.data\n  for (const key in res.data.data) {\n    resInformation[key].name = res.data.data[key].name\n    resInformation[key].unit = res.data.data[key].unit\n    gsap.to(resInformation[key].number, {\n      number: res.data.data[key].number,\n      duration: 1\n    })\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}