{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport scene from '@/threeModal/scene';\n// 3.1导入相机配置\nimport camera from '@/threeModal/camera';\n// 4.导入渲染器\nimport renderer from '@/threeModal/renderer';\n// // 导入控制器\n// import controls from '@/threeModal/controls'\n// 导入创建物体文件\nimport createMesh from '@/threeModal/createMesh';\n// 导入渲染更新\nimport animate from '@/threeModal/animate';\n// 导入初始化监听屏幕大小\nimport '@/threeModal/init';\n// 5.1导入坐标轴\nimport axse from '@/threeModal/axseHelp';\nimport { ref, onMounted, watch } from 'vue';\nimport Alarm from '@/threeModal/mesh/alarm';\nimport LineWall from '@/threeModal/mesh/lineWall';\nexport default {\n  __name: 'SceneCanvas',\n  props: ['resCityList'],\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n\n    // 1.导入threejs\n    // import * as THREE from 'three'\n    // 2.导入(初始化)场景\n\n    // 7.1获取场景div\n    let sceneDiv = ref(null);\n\n    // 3.2.将相机添加进场景\n    scene.add(camera);\n\n    // 5.2 创建坐标轴\n    scene.add(axse);\n\n    // 6.创建物体\n    createMesh();\n\n    // vue挂载成功之后再去追加dom\n    onMounted(() => {\n      // 7.2将渲染器加入dom\n      sceneDiv.value.appendChild(renderer.domElement);\n      // 8.2渲染执行\n      animate();\n    });\n    const meshDestroy = [];\n    const meshFn = {\n      火警: position => {\n        // 光墙\n        // 添加光墙\n        const lineWall = new LineWall(position);\n        scene.add(lineWall.mesh);\n      }\n    };\n    watch(() => props.resCityList, () => {\n      // 每次得到新的数据要销毁旧物体\n      meshDestroy.forEach(item => {\n        item.onRemove();\n      });\n      props.resCityList.forEach((item, i) => {\n        console.log(item, i);\n        //    返回的位置数据为0-100\n        const position = {\n          x: item.position.x / 15 - 3,\n          z: item.position.z / 15 - 3\n        };\n        // 生成精灵图\n        // 添加警告标识\n        const alarm = new Alarm(item.name, position);\n        console.log(position);\n        // 将生成的物体放到数组，以待每次新数据传入生成新物体时销毁旧物体\n        meshDestroy.push(alarm);\n        scene.add(alarm.mesh);\n        if (meshFn[item.name]) {\n          meshFn[item.name](position);\n        }\n      });\n    });\n    const __returned__ = {\n      props,\n      get sceneDiv() {\n        return sceneDiv;\n      },\n      set sceneDiv(v) {\n        sceneDiv = v;\n      },\n      meshDestroy,\n      meshFn,\n      get scene() {\n        return scene;\n      },\n      get camera() {\n        return camera;\n      },\n      get renderer() {\n        return renderer;\n      },\n      get createMesh() {\n        return createMesh;\n      },\n      get animate() {\n        return animate;\n      },\n      get axse() {\n        return axse;\n      },\n      ref,\n      onMounted,\n      watch,\n      get Alarm() {\n        return Alarm;\n      },\n      get LineWall() {\n        return LineWall;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";AAUA,OAAOA,KAAK,MAAM,oBAAoB;AACtC;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC;AACA,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C;AACA;AACA;AACA,OAAOC,UAAU,MAAM,yBAAyB;AAChD;AACA,OAAOC,OAAO,MAAM,sBAAsB;AAC1C;AACA,OAAO,mBAAmB;AAC1B;AACA,OAAOC,IAAI,MAAM,uBAAuB;AACxC,SAASC,GAAG,EAAEC,SAAsB,EAAEC,KAAK,QAAQ,KAAK;AAGxD,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,QAAQ,MAAM,4BAA4B;;;;;;;;;;IAtBjD;IACA;IACA;;IAsBA;IACA,IAAIC,QAAQ,GAAGL,GAAG,CAAC,IAAI,CAAC;;IAExB;IACAN,KAAK,CAACY,GAAG,CAACX,MAAM,CAAC;;IAEjB;IACAD,KAAK,CAACY,GAAG,CAACP,IAAI,CAAC;;IAEf;IACAF,UAAU,EAAE;;IAEZ;IACAI,SAAS,CAAC,MAAM;MACd;MACAI,QAAQ,CAACE,KAAK,CAACC,WAAW,CAACZ,QAAQ,CAACa,UAAU,CAAC;MAC/C;MACAX,OAAO,EAAE;IACX,CAAC,CAAC;IACF,MAAMY,WAAW,GAAG,EAAE;IACtB,MAAMC,MAAM,GAAG;MACbC,EAAE,EAAGC,QAAQ,IAAK;QAChB;QACA;QACF,MAAMC,QAAQ,GAAG,IAAIV,QAAQ,CAACS,QAAQ,CAAC;QACvCnB,KAAK,CAACY,GAAG,CAACQ,QAAQ,CAACC,IAAI,CAAC;MACxB;IACF,CAAC;IACDb,KAAK,CACH,MAAMc,KAAK,CAACC,WAAW,EACvB,MAAM;MACJ;MACAP,WAAW,CAACQ,OAAO,CAACC,IAAI,IAAI;QAC1BA,IAAI,CAACC,QAAQ,EAAE;MACjB,CAAC,CAAC;MACFJ,KAAK,CAACC,WAAW,CAACC,OAAO,CAAC,CAACC,IAAI,EAAEE,CAAC,KAAK;QACrCC,OAAO,CAACC,GAAG,CAACJ,IAAI,EAAEE,CAAC,CAAC;QACpB;QACA,MAAMR,QAAQ,GAAG;UACfW,CAAC,EAAEL,IAAI,CAACN,QAAQ,CAACW,CAAC,GAAG,EAAE,GAAG,CAAC;UAC3BC,CAAC,EAAEN,IAAI,CAACN,QAAQ,CAACY,CAAC,GAAG,EAAE,GAAG;QAC5B,CAAC;QACD;QACA;QACA,MAAMC,KAAK,GAAG,IAAIvB,KAAK,CAACgB,IAAI,CAACQ,IAAI,EAAEd,QAAQ,CAAC;QAC5CS,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;QACrB;QACAH,WAAW,CAACkB,IAAI,CAACF,KAAK,CAAC;QACvBhC,KAAK,CAACY,GAAG,CAACoB,KAAK,CAACX,IAAI,CAAC;QACrB,IAAIJ,MAAM,CAACQ,IAAI,CAACQ,IAAI,CAAC,EAAE;UACrBhB,MAAM,CAACQ,IAAI,CAACQ,IAAI,CAAC,CAACd,QAAQ,CAAC;QAC7B;MACF,CAAC,CAAC;IACJ,CAAC,CACF","names":["scene","camera","renderer","createMesh","animate","axse","ref","onMounted","watch","Alarm","LineWall","sceneDiv","add","value","appendChild","domElement","meshDestroy","meshFn","火警","position","lineWall","mesh","props","resCityList","forEach","item","onRemove","i","console","log","x","z","alarm","name","push"],"sources":["D:/vscodeDemo/threeDemo/threejs_smartcity/src/components/SceneCanvas.vue"],"sourcesContent":["<template>\n  <div class=\"sceneCanvas\" ref=\"sceneDiv\">\n    <!-- 画布元素追加 -->\n  </div>\n</template>\n<!-- 场景 -->\n<script setup>\n// 1.导入threejs\n// import * as THREE from 'three'\n// 2.导入(初始化)场景\nimport scene from '@/threeModal/scene'\n// 3.1导入相机配置\nimport camera from '@/threeModal/camera'\n// 4.导入渲染器\nimport renderer from '@/threeModal/renderer'\n// // 导入控制器\n// import controls from '@/threeModal/controls'\n// 导入创建物体文件\nimport createMesh from '@/threeModal/createMesh'\n// 导入渲染更新\nimport animate from '@/threeModal/animate'\n// 导入初始化监听屏幕大小\nimport '@/threeModal/init'\n// 5.1导入坐标轴\nimport axse from '@/threeModal/axseHelp'\nimport { ref, onMounted, defineProps, watch } from 'vue'\n\n\nimport Alarm from '@/threeModal/mesh/alarm'\nimport LineWall from '@/threeModal/mesh/lineWall'\nconst props = defineProps(['resCityList'])\n// 7.1获取场景div\nlet sceneDiv = ref(null)\n\n// 3.2.将相机添加进场景\nscene.add(camera)\n\n// 5.2 创建坐标轴\nscene.add(axse)\n\n// 6.创建物体\ncreateMesh()\n\n// vue挂载成功之后再去追加dom\nonMounted(() => {\n  // 7.2将渲染器加入dom\n  sceneDiv.value.appendChild(renderer.domElement)\n  // 8.2渲染执行\n  animate()\n})\nconst meshDestroy = []\nconst meshFn = {\n  火警: (position) => {\n    // 光墙\n    // 添加光墙\n  const lineWall = new LineWall(position)\n  scene.add(lineWall.mesh)\n  }\n}\nwatch(\n  () => props.resCityList,\n  () => {\n    // 每次得到新的数据要销毁旧物体\n    meshDestroy.forEach(item => {\n      item.onRemove()\n    })\n    props.resCityList.forEach((item, i) => {\n      console.log(item, i)\n      //    返回的位置数据为0-100\n      const position = {\n        x: item.position.x / 15 - 3,\n        z: item.position.z / 15 - 3,\n      }\n      // 生成精灵图\n      // 添加警告标识\n      const alarm = new Alarm(item.name, position)\n      console.log(position)\n      // 将生成的物体放到数组，以待每次新数据传入生成新物体时销毁旧物体\n      meshDestroy.push(alarm)\n      scene.add(alarm.mesh)\n      if (meshFn[item.name]) {\n        meshFn[item.name](position);\n      }\n    })\n  }\n)\n</script>\n\n<style scoped lang=\"scss\">\n// 画布全屏\n.scene {\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 100;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}